 {{
    config(
        materialized='incremental',
        unique_key=['CAL_TEST_RESLT_ID', 'EQPMNT_ID']
    )
}}


with EXP_1 as 
(
select 
    TGT.CAL_TEST_RESLT_ID,
    STG.EQPMNT_ID,
	STG.CAL_TEST_DATA_TYP_ID,
	STG.INSERT_DT,
	STG.UPD_DT,
	STG.ASRECDORCOMP_DATA_IND,
	STG.CXKEY_SRVC_ORD_NUM,
	STG.LAST_MODIFIED_DT,
	STG.CXKEY_CAL_TEST_RESLT_NM,
	STG.CXKEY_CAL_TEST_RESLT_TYP,
	STG.CXKEY_CAL_PROCEDURE_ID,
	STG.CXKEY_MFGR_ID,
	STG.CXKEY_MFGR_MDL_NUM,
	STG.CXKEY_SR_NUM,
	STG.CXKEY_FRMWRK_ID,
	STG.CXKEY_SUBMITTING_ENTITY,
	STG.CXKEY_APP_PLATFORM,
	STG.CXKEY_APP_ID,
	STG.EQUIP_MFGR_ID,
	STG.EQUIP_MFGR_NM,
	STG.EQUIP_MFGR_MDL_NUM,
	STG.EQUIP_SR_NUM,
	STG.EQUIP_INST_OPT,
	STG.EQUIP_SETUP,
	STG.EQUIP_ROLE
    from 
        {{ ref('ca_asrecdorcomp_equip_used_stg') }} STG
        LEFT OUTER JOIN 
         {{ ref('ca_cal_test_reslt_fact') }} TGT          
        ON 
        STG.CXKEY_SRVC_ORD_NUM = TGT.CXKEY_SRVC_ORD_NUM AND
       // STG.LAST_MODIFIED_DT = TGT.LAST_MODIFIED_DT AND
        STG.CXKEY_CAL_PROCEDURE_ID = TGT.CXKEY_CAL_PROCEDURE_ID AND
        STG.CXKEY_MFGR_ID = TGT.CXKEY_MFGR_ID AND
        STG.CXKEY_MFGR_MDL_NUM =  TGT.CXKEY_MFGR_MDL_NUM AND
         STG.CXKEY_SR_NUM = TGT.CXKEY_SR_NUM AND
       STG.CXKEY_FRMWRK_ID = TGT.CXKEY_FRMWRK_ID AND
       STG.CXKEY_SUBMITTING_ENTITY = TGT.CXKEY_SUBMITTING_ENTITY AND
       STG.CXKEY_CAL_TEST_RESLT_NM  = TGT.CXKEY_CAL_TEST_RESLT_NM AND
        STG.CXKEY_CAL_TEST_RESLT_TYP  = TGT.CXKEY_RESLT_TYP
        //STG.CXKEY_APP_PLATFORM  = TGT.CXKEY_APP_PLATFORM 
        //STG.CXKEY_APP_ID  = TGT.CXKEY_APP_ID
),

final as
(
    select
    TGT.CAL_TEST_RESLT_ID as TGT_CAL_TEST_RESLT_ID,
	TGT.EQPMNT_ID as TGT_EQPMNT_ID,
    STG.CAL_TEST_RESLT_ID,
	STG.EQPMNT_ID,
	STG.ASRECDORCOMP_DATA_IND,
	STG.CXKEY_SRVC_ORD_NUM,
	STG.LAST_MODIFIED_DT,
	STG.CXKEY_CAL_TEST_RESLT_NM,
	STG.CXKEY_CAL_TEST_RESLT_TYP,
	STG.CXKEY_CAL_PROCEDURE_ID,
	STG.CXKEY_MFGR_ID,
	STG.CXKEY_MFGR_MDL_NUM,
	STG.CXKEY_SR_NUM,
	STG.CXKEY_FRMWRK_ID,
	STG.CXKEY_SUBMITTING_ENTITY,
	STG.CXKEY_APP_PLATFORM,
	STG.CXKEY_APP_ID,
	STG.EQUIP_MFGR_ID,
	STG.EQUIP_MFGR_NM,
	STG.EQUIP_MFGR_MDL_NUM,
	STG.EQUIP_SR_NUM,
	STG.EQUIP_INST_OPT,
	STG.EQUIP_SETUP,
	STG.EQUIP_ROLE,
    STG.INSERT_DT,
	STG.UPD_DT
    from 
    EXP_1 STG
    LEFT OUTER JOIN 
    CA_ASRECORCOMP_EQUIP_USED TGT                
    ON 
    STG.CAL_TEST_RESLT_ID = TGT.CAL_TEST_RESLT_ID AND
    STG.EQPMNT_ID = TGT.EQPMNT_ID
),
finaltest as (
select distinct
CAL_TEST_RESLT_ID,
EQPMNT_ID,
ASRECDORCOMP_DATA_IND,
CXKEY_SRVC_ORD_NUM,
LAST_MODIFIED_DT,
CXKEY_CAL_TEST_RESLT_NM,
CXKEY_CAL_TEST_RESLT_TYP,
CXKEY_CAL_PROCEDURE_ID,
CXKEY_MFGR_ID,
CXKEY_MFGR_MDL_NUM,
CXKEY_SR_NUM,
CXKEY_FRMWRK_ID,
CXKEY_SUBMITTING_ENTITY,
CXKEY_APP_PLATFORM,
CXKEY_APP_ID,
EQUIP_MFGR_ID,
EQUIP_MFGR_NM,
EQUIP_MFGR_MDL_NUM,
EQUIP_SR_NUM,
EQUIP_INST_OPT,
EQUIP_SETUP,
EQUIP_ROLE,
INSERT_DT,
UPD_DT
from final where   CAL_TEST_RESLT_ID IS NOT NULL AND 
    EQPMNT_ID IS NOT NULL
    )
     select * from finaltest
{% if is_incremental() %}

  where LAST_MODIFIED_DT > (select max(LAST_MODIFIED_DT) from {{ this }})

{% endif %}

  